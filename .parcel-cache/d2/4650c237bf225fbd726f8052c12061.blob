var helpers = require("../../../../../AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "LoginView", function () {
    return LoginView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  require('axios');
  var _reactBootstrapButton = require('react-bootstrap/Button');
  var _reactBootstrapButtonDefault = _parcelHelpers.interopDefault(_reactBootstrapButton);
  var _reactBootstrapContainer = require('react-bootstrap/Container');
  var _reactBootstrapContainerDefault = _parcelHelpers.interopDefault(_reactBootstrapContainer);
  var _formik = require('formik');
  require("yup");
  var _reactHelmet = require("react-helmet");
  var _reactHelmetDefault = _parcelHelpers.interopDefault(_reactHelmet);
  require('./login-view.scss');
  var _reactBootstrap = require('react-bootstrap');
  var _jsxFileName = "C:\\Users\\tobia\\Desktop\\horrorTime-client\\src\\components\\login-view\\login-view.jsx", _s = $RefreshSig$();
  function LoginView(props) {
    _s();
    const [validated, setValidated] = _react.useState(false);
    // const handleSubmit = (e) => {
    // const form = event.currentTarget;
    // if (form.checkValidity() === false) {
    // e.preventDefault();
    // axios.post(' https://itshorrortime.herokuapp.com/login', {
    // Username: username,
    // Password: password
    // }).then(response => {
    // const data = response.data;
    // props.onLoggedIn(data);
    // })
    // .catch(e => {
    // console.log('Invalid Username or Password');
    // });
    // }
    // setValidated(true);
    // };
    const {Formik} = formik;
    const schema = yup.object().shape({
      username: yup.string().required(),
      password: yup.string().required()
    });
    return (
      /*#__PURE__*/_reactDefault.default.createElement(Formik, {
        validationSchema: schema,
        onSubmit: console.log,
        initialValues: {
          username: '',
          password: ''
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 43,
          columnNumber: 5
        }
      }, ({handleSubmit, handleChange, handleBlur, values, touched, isValid, errors}) => /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapContainerDefault.default, {
        className: "container1",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 62,
          columnNumber: 9
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactHelmetDefault.default, {
        bodyAttributes: {
          style: 'background-color : black'
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 63,
          columnNumber: 11
        }
      }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapContainerDefault.default, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 65,
          columnNumber: 11
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_formik.Form.Row, {
        className: "justify-content-center mt-5",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 66,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_formik.Form, {
        noValidate: true,
        validated: validated,
        onSubmit: handleSubmit,
        className: "container2 justify-content-enter",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 67,
          columnNumber: 15
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_formik.Form.Row, {
        className: "justify-content-center",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 68,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_formik.Form.Group, {
        as: Col,
        md: "4",
        controlId: "validationFormikUsername2",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 69,
          columnNumber: 19
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_formik.Form.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 71,
          columnNumber: 21
        }
      }, "Username:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.InputGroup, {
        hasValidation: true,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 72,
          columnNumber: 21
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.InputGroup.Prepend, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 73,
          columnNumber: 23
        }
      }), /*#__PURE__*/_reactDefault.default.createElement(_formik.Form.Control, {
        type: "text",
        name: "username",
        value: values.username,
        placeholder: "Enter Username",
        onChange: handleChange,
        isInvalid: !!errors.username,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 76,
          columnNumber: 23
        }
      })))), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapContainerDefault.default, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 90,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_formik.Form.Row, {
        className: "justify-content-center",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 91,
          columnNumber: 19
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_formik.Form.Group, {
        controlId: "formPassword",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 92,
          columnNumber: 21
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_formik.Form.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 93,
          columnNumber: 23
        }
      }, "Password:"), /*#__PURE__*/_reactDefault.default.createElement(_formik.Form.Control, {
        type: "password",
        placeholder: "Enter Password",
        onChange: e => setPassword(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 94,
          columnNumber: 23
        }
      })))), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapContainerDefault.default, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 103,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_formik.Form.Row, {
        className: "justify-content-center mb-3",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 104,
          columnNumber: 19
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
        variant: "dark",
        block: true,
        type: "submit",
        onClick: handleSubmit,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 105,
          columnNumber: 21
        }
      }, "Submit"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
        variant: "outline-dark",
        block: true,
        onClick: props.toggleView,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 106,
          columnNumber: 21
        }
      }, "Don't have an account?"))))))))
    );
  }
  _s(LoginView, "otD17mARj5mKZHrEMvBAd47slX0=");
  _c = LoginView;
  var _c;
  $RefreshReg$(_c, "LoginView");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
