var helpers = require("../../../../../AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "ProfileView", function () {
    return ProfileView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _axios = require('axios');
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _reactBootstrapForm = require('react-bootstrap/Form');
  var _reactBootstrapFormDefault = _parcelHelpers.interopDefault(_reactBootstrapForm);
  var _reactBootstrapButton = require('react-bootstrap/Button');
  var _reactBootstrapButtonDefault = _parcelHelpers.interopDefault(_reactBootstrapButton);
  var _reactHelmet = require("react-helmet");
  var _reactHelmetDefault = _parcelHelpers.interopDefault(_reactHelmet);
  require('react-bootstrap/Row');
  var _propTypes = require('prop-types');
  var _propTypesDefault = _parcelHelpers.interopDefault(_propTypes);
  var _reactBootstrap = require('react-bootstrap');
  var _reactBootstrapEsmImage = require('react-bootstrap/esm/Image');
  var _jsxFileName = "C:\\Users\\tobia\\Desktop\\horrorTime-client\\src\\components\\profile-view\\profile-view.jsx";
  class ProfileView extends _reactDefault.default.Component {
    constructor() {
      super();
      this.state = {
        movie: this.props
      };
    }
    componentDidMount() {
      let accessToken = localStorage.getItem('token');
      let userInfo = localStorage.getItem('user');
      if (accessToken !== null) {
        this.setState({
          user: localStorage.getItem('user'),
          token: localStorage.getItem('token')
        });
        /*this.getMovies(accessToken);*/
        this.getUser(accessToken, userInfo);
      }
    }
    getUser(token, user) {
      _axiosDefault.default.get(`https://itshorrortime.herokuapp.com/users/${user}`, {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        console.log('Got account Info');
        this.setState({
          userInfo: response.data
        });
      });
    }
    handleDelete(user, token) {
      _axiosDefault.default.delete(`https://itshorrortime.herokuapp.com/users/${user}`, {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(() => {
        localStorage.removeItem('user');
        localStorage.removeItem('token');
        window.open('/', '_self');
      });
    }
    handleUpdate(user, token, e) {
      console.log('you are in handleUpdate');
      let usernameUpdate = document.getElementById('username');
      let passwordUpdate = document.getElementById('password');
      let emailUpdate = document.getElementById('email');
      let birthdayUpdate = document.getElemenetByID('birthday');
      e.preventDefault();
      _axiosDefault.default.put(`https://itshorrortime.herokuapp.com/users/${user}`, {
        Username: usernameUpdate,
        Password: passwordUpdate,
        Email: emailUpdate,
        Birthday: birthdayUpdate
      }, {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json',
          'Accept': 'text/plain',
          'Accept': '*/*'
        }
      }).then(response => {
        console.log(response);
        const data = response.data;
        localStorage.setItem("user", data.Username);
        console.log(response.data);
      }).catch(e => {
        console.log(e.toJSON());
        console.log(e.response.data);
      });
    }
    /*handleUpdate = async () => {
    try {
    await axios.put(`https://itshorrortime.herokuapp.com/users/${user}`,
    {
    
    Username: this.state.Username,
    Password: this.state.Password,
    Email: this.state.Email,
    Birthday: this.state.Birthday
    },
    {
    headers: { Authorization: `Bearer ${token}` }
    })
    .then((response) => {
    const data = response.data;
    localStorage.setItem("user", data.Username);
    console.log(response.data);
    }).catch((e) => {
    console.log(e.toJSON());
    console.log(e.response.data);
    })
    
    }*/
    render() {
      const {user, token, userInfo, movie} = this.props;
      console.log(userInfo);
      return (
        /*#__PURE__*/_reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/_reactDefault.default.createElement(_reactHelmetDefault.default, {
          bodyAttributes: {
            style: 'background-color : black, text-decoration-color : white'
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 135,
            columnNumber: 9
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 136,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Title, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 137,
            columnNumber: 11
          }
        }, " Account Information"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Body, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 138,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Text, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 139,
            columnNumber: 13
          }
        }, "Username: ", user)), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Body, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 142,
            columnNumber: 11
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Body, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 143,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 146,
            columnNumber: 13
          }
        }, "Update Information"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 147,
            columnNumber: 13
          }
        }, "Show Movie List"))), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default, {
          onSubmit: e => this.handleUpdate(user, token, e),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 153,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Row, {
          className: "justify-content-center",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 154,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 155,
            columnNumber: 13
          }
        }, "Username:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
          type: "text",
          required: true,
          minLength: "6",
          maxLength: "12",
          placeholder: "Enter Username",
          id: "username",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 156,
            columnNumber: 13
          }
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Row, {
          className: "justify-content-center",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 167,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 168,
            columnNumber: 13
          }
        }, "Password:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
          type: "text",
          required: true,
          minLength: "6",
          maxLength: "12",
          placeholder: "Enter Password",
          id: "password",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 169,
            columnNumber: 13
          }
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Row, {
          className: "justify-content-center",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 180,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 182,
            columnNumber: 13
          }
        }, "Email:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
          type: "text",
          required: true,
          placeholder: "Enter Email",
          id: "email",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 183,
            columnNumber: 13
          }
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Row, {
          className: "justify-content-center",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 192,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 193,
            columnNumber: 13
          }
        }, "Birthday: "), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
          type: "date",
          required: true,
          id: "birthday",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 194,
            columnNumber: 13
          }
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          type: "submit",
          variant: "dark",
          block: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 203,
            columnNumber: 11
          }
        }, "Submit")), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          onClick: e => this.handleDelete(user, token),
          variant: "dark",
          block: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 206,
            columnNumber: 9
          }
        }, "Delete"))
      );
    }
  }
  exports.default = ProfileView;
  ProfileView.propTypes = {
    User: _propTypesDefault.default.shape({
      Username: _reactBootstrapEsmImage.propTypes.string,
      Password: _reactBootstrapEsmImage.propTypes.string,
      Email: _reactBootstrapEsmImage.propTypes.string
    })
  };
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
