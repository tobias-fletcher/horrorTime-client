import   "214dd0982ed8c20c8d5250664f2af293:./getComputedStyle";
import   "214dd0982ed8c20c8d5250664f2af293:./hyphenateStyle";
import   "214dd0982ed8c20c8d5250664f2af293:./isTransform";
function $214dd0982ed8c20c8d5250664f2af293$var$style(node, property) {
    var css = '';
    var transforms = '';
    if (typeof property === 'string') return node.style.getPropertyValue($214dd0982ed8c20c8d5250664f2af293$import$3aa5201e6f20b405$9099ad97b570f7c(property)) || $214dd0982ed8c20c8d5250664f2af293$import$ff34b965dead48ae$9099ad97b570f7c(node).getPropertyValue($214dd0982ed8c20c8d5250664f2af293$import$3aa5201e6f20b405$9099ad97b570f7c(property));
    Object.keys(property).forEach(function(key) {
        var value = property[key];
        if (!value && value !== 0) node.style.removeProperty($214dd0982ed8c20c8d5250664f2af293$import$3aa5201e6f20b405$9099ad97b570f7c(key));
        else if ($214dd0982ed8c20c8d5250664f2af293$import$14389b45a161cf50$9099ad97b570f7c(key)) transforms += key + "(" + value + ") ";
        else css += $214dd0982ed8c20c8d5250664f2af293$import$3aa5201e6f20b405$9099ad97b570f7c(key) + ": " + value + ";";
    });
    if (transforms) css += "transform: " + transforms + ";";
    node.style.cssText += ";" + css;
}
var $214dd0982ed8c20c8d5250664f2af293$export$9099ad97b570f7c = $214dd0982ed8c20c8d5250664f2af293$var$style;
