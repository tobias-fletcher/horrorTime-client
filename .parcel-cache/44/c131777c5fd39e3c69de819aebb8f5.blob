var helpers = require("../../../../../AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "MovieCard", function () {
    return MovieCard;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _axios = require('axios');
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _propTypes = require('prop-types');
  var _propTypesDefault = _parcelHelpers.interopDefault(_propTypes);
  var _reactBootstrapButton = require('react-bootstrap/Button');
  var _reactBootstrapButtonDefault = _parcelHelpers.interopDefault(_reactBootstrapButton);
  var _reactBootstrapCard = require('react-bootstrap/Card');
  var _reactBootstrapCardDefault = _parcelHelpers.interopDefault(_reactBootstrapCard);
  require('react-bootstrap/CardGroup');
  var _reactHelmet = require("react-helmet");
  var _reactHelmetDefault = _parcelHelpers.interopDefault(_reactHelmet);
  var _reactRouterDom = require('react-router-dom');
  require('../director-view/director-view');
  require('react-bootstrap');
  require('./movie-card.scss');
  require('react-bootstrap');
  var _jsxFileName = "C:\\Users\\tobia\\Desktop\\horrorTime-client\\src\\components\\movie-card\\movie-card.jsx";
  class MovieCard extends _reactDefault.default.Component {
    constructor(props) {
      super(props);
    }
    addFav(movie, user) {
      const token = localStorage.getItem("token");
      console.log(this.props.movie._id);
      console.log(user);
      _axiosDefault.default.post(`https://itshorrortime.herokuapp.com/${user}/movies/${movie._id}`, {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        console.log(response);
      });
    }
    render() {
      const {movie, onMovieClick, user} = this.props;
      // console.log(movie);
      return (
        /*#__PURE__*/_reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/_reactDefault.default.createElement(_reactHelmetDefault.default, {
          bodyAttributes: {
            style: 'background-color : black'
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 41,
            columnNumber: 9
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapCardDefault.default, {
          body: true,
          bsPrefix: "maximumW",
          className: "bg-dark text-white mt-5 mx-2",
          style: {
            height: "24rem"
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 45,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapCardDefault.default.Body, {
          className: "justify-content-center align-items-center",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 46,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapCardDefault.default.Img, {
          variant: "top",
          src: movie.ImagePath,
          style: {
            height: "11rem"
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 47,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapCardDefault.default.Title, {
          className: "my-2",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 48,
            columnNumber: 13
          }
        }, movie.Title), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapCardDefault.default.Footer, {
          className: "mb-4",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 49,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: `/movies/${movie._id}`,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 50,
            columnNumber: 15
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          variant: "dark",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 51,
            columnNumber: 17
          }
        }, "Movie Info")), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: `/movies/${movie._id}`,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 53,
            columnNumber: 15
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          className: "mb-2",
          block: true,
          variant: "primary",
          onClick: e => this.addFav(movie, user),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 54,
            columnNumber: 17
          }
        }, "Add to favourite")), "*"))))
      );
    }
  }
  MovieCard.propTypes = {
    movie: _propTypesDefault.default.shape({
      Title: _propTypesDefault.default.string.isRequired,
      Description: _propTypesDefault.default.string.isRequired,
      Genre: _propTypesDefault.default.shape({
        Name: _propTypesDefault.default.string.isRequired,
        Description: _propTypesDefault.default.string.isRequired
      }),
      Director: _propTypesDefault.default.shape({
        Name: _propTypesDefault.default.string.isRequired,
        Bio: _propTypesDefault.default.string.isRequired,
        Birth: _propTypesDefault.default.string.isRequired,
        Death: _propTypesDefault.default.string
      }),
      ImagePath: _propTypesDefault.default.string.isRequired,
      Featured: _propTypesDefault.default.bool,
      Year: _propTypesDefault.default.string
    }).isRequired
  };
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
