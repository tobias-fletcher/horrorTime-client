'use strict';
import   "ceaab18c3b06f015e4b5a3b8b691dcb3:../utils";
/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */ $ceaab18c3b06f015e4b5a3b8b691dcb3$exports = function mergeConfig(config1, config2) {
    // eslint-disable-next-line no-param-reassign
    config2 = config2 || {
    };
    var config = {
    };
    var valueFromConfig2Keys = [
        'url',
        'method',
        'data'
    ];
    var mergeDeepPropertiesKeys = [
        'headers',
        'auth',
        'proxy',
        'params'
    ];
    var defaultToConfig2Keys = [
        'baseURL',
        'transformRequest',
        'transformResponse',
        'paramsSerializer',
        'timeout',
        'timeoutMessage',
        'withCredentials',
        'adapter',
        'responseType',
        'xsrfCookieName',
        'xsrfHeaderName',
        'onUploadProgress',
        'onDownloadProgress',
        'decompress',
        'maxContentLength',
        'maxBodyLength',
        'maxRedirects',
        'transport',
        'httpAgent',
        'httpsAgent',
        'cancelToken',
        'socketPath',
        'responseEncoding'
    ];
    var directMergeKeys = [
        'validateStatus'
    ];
    function getMergedValue(target, source) {
        if ($ceaab18c3b06f015e4b5a3b8b691dcb3$import$ec64c07a6e244526$d5f7afbd3e0ce3b1(target) && $ceaab18c3b06f015e4b5a3b8b691dcb3$import$ec64c07a6e244526$d5f7afbd3e0ce3b1(source)) return $ceaab18c3b06f015e4b5a3b8b691dcb3$import$ec64c07a6e244526$7e2a8c166c5904b7(target, source);
        else if ($ceaab18c3b06f015e4b5a3b8b691dcb3$import$ec64c07a6e244526$d5f7afbd3e0ce3b1(source)) return $ceaab18c3b06f015e4b5a3b8b691dcb3$import$ec64c07a6e244526$7e2a8c166c5904b7({
        }, source);
        else if ($ceaab18c3b06f015e4b5a3b8b691dcb3$import$ec64c07a6e244526$162566795c5ccff0(source)) return source.slice();
        return source;
    }
    function mergeDeepProperties(prop) {
        if (!$ceaab18c3b06f015e4b5a3b8b691dcb3$import$ec64c07a6e244526$3747995d719cde22(config2[prop])) config[prop] = getMergedValue(config1[prop], config2[prop]);
        else if (!$ceaab18c3b06f015e4b5a3b8b691dcb3$import$ec64c07a6e244526$3747995d719cde22(config1[prop])) config[prop] = getMergedValue(undefined, config1[prop]);
    }
    $ceaab18c3b06f015e4b5a3b8b691dcb3$import$ec64c07a6e244526$40f3d9558cf6e846(valueFromConfig2Keys, function valueFromConfig2(prop) {
        if (!$ceaab18c3b06f015e4b5a3b8b691dcb3$import$ec64c07a6e244526$3747995d719cde22(config2[prop])) config[prop] = getMergedValue(undefined, config2[prop]);
    });
    $ceaab18c3b06f015e4b5a3b8b691dcb3$import$ec64c07a6e244526$40f3d9558cf6e846(mergeDeepPropertiesKeys, mergeDeepProperties);
    $ceaab18c3b06f015e4b5a3b8b691dcb3$import$ec64c07a6e244526$40f3d9558cf6e846(defaultToConfig2Keys, function defaultToConfig2(prop) {
        if (!$ceaab18c3b06f015e4b5a3b8b691dcb3$import$ec64c07a6e244526$3747995d719cde22(config2[prop])) config[prop] = getMergedValue(undefined, config2[prop]);
        else if (!$ceaab18c3b06f015e4b5a3b8b691dcb3$import$ec64c07a6e244526$3747995d719cde22(config1[prop])) config[prop] = getMergedValue(undefined, config1[prop]);
    });
    $ceaab18c3b06f015e4b5a3b8b691dcb3$import$ec64c07a6e244526$40f3d9558cf6e846(directMergeKeys, function merge(prop) {
        if (prop in config2) config[prop] = getMergedValue(config1[prop], config2[prop]);
        else if (prop in config1) config[prop] = getMergedValue(undefined, config1[prop]);
    });
    var axiosKeys = valueFromConfig2Keys.concat(mergeDeepPropertiesKeys).concat(defaultToConfig2Keys).concat(directMergeKeys);
    var otherKeys = Object.keys(config1).concat(Object.keys(config2)).filter(function filterAxiosKeys(key) {
        return axiosKeys.indexOf(key) === -1;
    });
    $ceaab18c3b06f015e4b5a3b8b691dcb3$import$ec64c07a6e244526$40f3d9558cf6e846(otherKeys, mergeDeepProperties);
    return config;
};
